<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/styles/css/panel.css">
  <link rel="stylesheet" href="/styles/css/keyboard.css">
  <link rel="stylesheet" href="/styles/css/arabic-fonts.css">
  <title>Keyboard Arab</title>
</head>

<body>
  <div class="panel">
  </div>
  <div class="keyboard" id="keyboard">

  </div>

  <script>
    let buttonData = [];

    async function fetchButtonData() {
      try {
        const baseUrl = window.location.origin;
        const response = await fetch(baseUrl + '/button/get/all');
        if (!response.ok) {
          throw new Error('Failed to fetch button data');
        }
        buttonData = await response.json();

        return buttonData;
      } catch (error) {
        console.error(error);
      }
    }

    // Function to generate the keyboard element
    function multiValueKeyButton(classBtn, indicatorValue, mainValue) {
      // Get the reference to the keyboard div
      var keyboardDiv = document.getElementById("keyboard");

      // Create a new div element for the key
      var keyDiv = document.createElement("div");
      keyDiv.classList.add("key", "multi-value", classBtn);


      // Create key-info div
      var keyInfoDiv = document.createElement("div");
      keyInfoDiv.classList.add("key-info");

      // Create span for indicator
      var indicatorSpan = document.createElement("span");
      indicatorSpan.classList.add("indicator");
      indicatorSpan.textContent = indicatorValue;

      // Create span for second value
      // var secondValueSpan = document.createElement("span");
      // secondValueSpan.classList.add("second-value");
      // secondValueSpan.textContent = "Ø¸";

      // Append indicator and second value spans to key-info div
      keyInfoDiv.appendChild(indicatorSpan);
      // keyInfoDiv.appendChild(secondValueSpan);

      // Create main-value div
      var mainValueDiv = document.createElement("div");
      mainValueDiv.classList.add("main-value", "font-kitab");
      if(mainValue) {
        mainValueDiv.textContent = eval('"' + mainValue + '"');
      } else {
        mainValueDiv.textContent = "null"
      }

      // Append key-info div and main-value div to key div
      keyDiv.appendChild(keyInfoDiv);
      keyDiv.appendChild(mainValueDiv);

      // Append the key div to the keyboard div
      keyboardDiv.appendChild(keyDiv);
    }

    // Function to generate the keyboard element
    function singleValueKeyButton(classBtn, mainValue) {
      // Get the reference to the keyboard div
      var keyboardDiv = document.getElementById("keyboard");

      // Create a new div element for the key
      var keyDiv = document.createElement("div");
      keyDiv.classList.add("key", classBtn);

      // Create main-value div
      var mainValueDiv = document.createElement("div");
      mainValueDiv.classList.add("main-value");
      mainValueDiv.textContent = mainValue;

      // Append main-value div to key div
      keyDiv.appendChild(mainValueDiv);

      // Append the key div to the keyboard div
      keyboardDiv.appendChild(keyDiv);
    }

    document.addEventListener('DOMContentLoaded', async function() {
      const dataKeyButton = await fetchButtonData();      

      dataKeyButton.forEach(element => {
        if (element.key === "1") {
          if(element.arabic) {
            multiValueKeyButton("btn-n1", 1, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n1", 1, null)
          }
        } else if (element.key === "2") {
          if(element.arabic) {
            multiValueKeyButton("btn-n2", 2, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n2", 2, null)
          }
        } else if (element.key === "3") {
          if(element.arabic) {
            multiValueKeyButton("btn-n3", 3, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n3", 3)
          }
        } else if (element.key === "4") {
          if(element.arabic) {
            multiValueKeyButton("btn-n4", 4, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n4", 4)
          }
        } else if (element.key === "5") {
          if(element.arabic) {
            multiValueKeyButton("btn-n5", 5, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n5", 5)
          }
        } else if (element.key === "6") {
          if(element.arabic) {
            multiValueKeyButton("btn-n6", 6, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n6", 6)
          }
        } else if (element.key === "7") {
          if(element.arabic) {
            multiValueKeyButton("btn-n7", 7, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n7", 7)
          }
        } else if (element.key === "8") {
          if(element.arabic) {
            multiValueKeyButton("btn-n8", 8, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n8", 8)
          }
        } else if (element.key === "9") {
          if(element.arabic) {
            multiValueKeyButton("btn-n9", 9, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n9", 9)
          }
        } else if (element.key === "0") {
          if(element.arabic) {
            multiValueKeyButton("btn-n0", 0, element.arabic.unicode)
          } else {
            multiValueKeyButton("btn-n0", 0)
          }
        }
      });
    });
  </script>
</body>

</html>